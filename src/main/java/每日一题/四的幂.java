package 每日一题;

/**
 * Title: 四的幂
 * Description: TODO
 *
 * @author zephxu
 * @version V1.0
 * @date 2021-05-31
 */
public class 四的幂 {
    public boolean isPowerOfFour(int n) {
//        if (n <= 0) {
//            return false;
//        }
//        while (n % 4 == 0) {
//            n /= 4;
//        }
//        return n == 1;

//        return n > 0 && (n & (n - 1)) == 0 && (n & 0xaaaaaaaa) == 0;
        // 4 的幂一定是 2 的幂，即二进制数只有一个 1 ，不满足则false
        // 再者第偶数个二进制位（从 0 开始数）是1，因为这个 1 后面有偶数个 0
        //使用 10101010101010101010101010101010 可判断出这个 1 是不是在偶数位置（0开始数）
        //16进制为 0xaaaaaaaa
        //因为是32位数，且是 4 的幂，一定为整数，即 00101010101010101010101010101010
        //16进制为 0x2aaaaaaa

        return n > 0 && (n & (n - 1)) == 0 && n % 3 == 1;
        /*
            4的幂
            4 ^ x = (3 + 1) ^ x = 1 (mod3)

            由上文先判断是否为 2 的幂
            如果是 2 的幂但不是 4 的幂，则有
            4 ^ x  * 2，此时除以 3 的余数肯定为 2

            两个结合，为 2 的幂，但除以 3 的余数为 1 则是 4 的幂
         */


    }
}
